function AccessError(){var e=Error.apply(this,arguments);e.name=this.name="AccessError",this.stack=e.stack,this.message=e.message}angular.module("zakaz-xd.main",["ui.router","zakaz-xd.auth","zakaz-xd.dialogs","zakaz-xd.auth.login-form","zakaz-xd.user-profile","zakaz-xd.orders.orders-list","zakaz-xd.orders.edit-order","zakaz-xd.orders.states","zakaz-xd.products.states","zakaz-xd.manage-users.states","zakaz-xd.demo.states"]).config(["$stateProvider","$urlRouterProvider","ACCESS",function(e,r,t){e.state("login",{url:"/login",controller:"LoginFormCtrl",templateUrl:"app/main-pages/auth/login-form/login-form.tpl.html",resolve:{isAuthenticated:function(e,r){return r.isAuthenticated()},canGo:function(e,r){return r?e.reject("User already login"):e.when(!0)}}}).state("user-profile",{url:"/profile",controller:"UserProfileCtrl",templateUrl:"app/main-pages/user-profile/user-profile.tpl.html",resolve:{user:function(e,r){return r.getCurrentUser()}}}).state("user-profile-change-password",{url:"/profile/change-password",controller:"UserProfileCtrl",templateUrl:"app/main-pages/user-profile/user-profile-change-password.tpl.html",resolve:{user:function(e,r){return r.getCurrentUser()},hasAccess:function(e,r){return r.checkAccess(t.CHANGE_OWN_PASSWORD)}}}).state("logout-success",{url:"/logout-success",templateUrl:"app/main-pages/auth/logout-success/logout-success.tpl.html"}).state("access-denied",{url:"/access-denied",templateUrl:"app/main-pages/auth/access-denied/access-denied.tpl.html"}).state("not-authenticated",{url:"/not-authenticated",templateUrl:"app/main-pages/auth/not-authenticated/not-authenticated.tpl.html"}),r.otherwise("/orders-list")}]).controller("ZakazXdCtrl",["$rootScope","$scope","$location","AuthService",function(){}]).controller("ZakazXdHeaderCtrl",["$rootScope","$scope","$state","AuthService","ErrorDialog",function(e,r,t,s,o){r.logout=function(){s.logout().then(function(){t.go("logout-success")},function(e){o.open(e.data,!0)})},s.isAuthenticated().then(function(e){e&&s.getCurrentUser()}),r.currentUser=function(){return s.currentUser()},r.isLogin=function(){return s.isLogin()},r.AuthService=s}]),function(e,r){"use strict";var t,s="lodash",o=[];return t=e.module(s,o),t.service("_",function(){return r}),void 0===r?(console.log("WARN: Не подключена библиотека loDash."),void 0):(r.mixin({fill:function(e,t){return r.isObject(t)&&r.each(e,function(r,s){void 0!==t[s]&&(e[s]=t[s])}),e}}),r.mixin({pushAll:function(e,r){Array.prototype.push.apply(e,r)},replaceArrayContent:function(e,t){e&&t&&(e.length=0,r.pushAll(e,t))},clearArray:function(e){r.replaceArrayContent(e,[])}}),r.cleanEmpty=function(e){return r.omit(e,function(e){return r.isObject(e)||r.isArray(e)?(e=r.cleanEmpty(e),r.isEmpty(e)):r.isUndefined(e)||r.isNull(e)||r.isNaN(e)||""===e})},void 0)}(angular,window._),angular.module("zakaz-xd.auth.access",[]).constant("ACCESS",{MANAGE_USERS:1,CREATE_ORDER:2,VIEW_OWN_ORDERS:4,EDIT_OWN_ORDER:8,REMOVE_OWN_ORDER:16,VIEW_ALL_ORDER:32,EDIT_ANY_ORDER:64,REMOVE_ANY_ORDER:128,CHANGE_OWN_PASSWORD:256,CHANGE_OWN_ROLE_LIST:512,VIEW_ROLES:1024,MANAGE_PRODUCTS:2048,MANAGE_ORDERS:4096}),angular.module("zakaz-xd.auth",["ngCookies","zakaz-xd.auth.access","zakaz-xd.resources.auth-resource","zakaz-xd.dialogs"]).run(["$rootScope","$state","AuthService","ErrorDialog",function(e,r,t,s){e.$on("$stateChangeError",function(e,r,o,a,n,i){e.preventDefault(),i instanceof AccessError?t.accessDenied():i.data?s.open(i.data):console.error(i)})}]).factory("AuthInterceptor",["$q","$cookies","AuthService",function(e,r,t){return{responseError:function(r){return r.config&&r.config.ignoreAuthInterceptor?e.reject(r):(401===r.status&&t.notAuthenticated(),403===r.status&&t.accessDenied(),e.reject(r))}}}]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptor")}]).provider("AuthService",function(){this.$get=["$injector","$q","ACCESS",function(e,r,t){function s(){if(l)return l;var t=r.defer();return e.get("AuthResource").getCurrentUser().then(function(e){n=e.data,t.resolve(n),l=null},function(e){t.reject(e),l=null}),l=t.promise}function o(){var t=r.defer();return e.get("AuthResource").isAuthenticated().then(function(e){i=e.data,t.resolve(i)},function(e){t.reject(e)}),t.promise}function a(e,r){for(var t=0;t<e.roles.length;t++)for(var s=e.roles[t],o=0;o<s.accesses.length;o++){var a=s.accesses[o].value;if(r&a)return!0}return!1}var n=null,i=null,l=null;return{checkAccess:function(e){if(n)return a(n,e)?r.when("Current user is allowed access "+e):r.reject(new AccessError("Current user is not allowed access "+e));var t=r.defer();return s().then(function(r){a(r,e)?t.resolve("Current user is allowed access "+e):t.reject(new AccessError("Current user is not allowed access "+e))},function(e){t.reject(e)}),t.promise},hasAccess:function(e){return n?a(n,e):!1},hasAccessByCodes:function(e){if(!n)return!1;var r=e.split(",");if(0===r.length)return!0;for(var s=null,o=0;o<r.length;o++){var i=r[o],l=t[i];null!==l&&void 0!==l&&(s?s|=l:s=l)}return null===s?!1:a(n,s)},notAuthenticated:function(){i=!1,e.get("$state").go("login")},accessDenied:function(){e.get("$state").go("access-denied")},getCurrentUser:function(){return n?r.when(n):s()},reloadCurrentUser:function(){return s()},currentUser:function(){return n},isAuthenticated:function(){return null!==i?r.when(i):o()},isLogin:function(){return i},login:function(t,o){var a=r.defer();return e.get("AuthResource").login(t,o).then(function(){i=!0,s().then(function(e){a.resolve(e)},function(e){a.reject(e)})},function(e){a.reject(e)}),a.promise},logout:function(){var t=r.defer();return e.get("AuthResource").logout().then(function(e){i=null,n=null,l=null,t.resolve(e)},function(e){t.reject(e)}),t.promise}}}]}),angular.module("zakaz-xd.dialogs",["ui.bootstrap"]).factory("ErrorDialog",["$q","$modal","$sce",function(e,r){return{open:function(e,t){r.open({animation:!0,backdrop:"static",size:"lg",templateUrl:"app/dialogs/error-dialog.tpl.html",resolve:{},controller:function(r,s){r.error=e,r.printStack=t,r.close=function(){s.close()}}})}}}]).factory("InfoDialog",["$q","$modal","$sce",function(e,r,t){return{open:function(e,s){r.open({animation:!0,backdrop:"static",size:"lg",templateUrl:"app/dialogs/info-dialog.tpl.html",resolve:{},controller:function(r,o){r.message=t.trustAsHtml(e),r.title=s,r.close=function(){o.close()}}})}}}]).factory("YesNoDialog",["$q","$modal","$sce",function(e,r,t){return{open:function(e,s){var o=r.open({animation:!0,backdrop:"static",size:"lg",templateUrl:"app/dialogs/yes-no-dialog.tpl.html",resolve:{},controller:function(r){r.message=t.trustAsHtml(e),r.title=s,r.close=function(){r.$dismiss("NO")},r.yes=function(){r.$close("YES")},r.no=function(){r.$dismiss("NO")}}});return o.result}}}]).factory("ErrorHandler",["ErrorDialog",function(e){return{handle:function(r){e.open(r.data,!0)}}}]),AccessError.prototype=Object.create(Error.prototype,{constructor:{value:AccessError,writable:!0,configurable:!0}}),angular.module("zakaz-xd.resources.auth-resource",[]).factory("AuthResource",["$q","$http",function(e,r){var t="/auth";return{changePassword:function(e,s){return r.post(t+"/change-password",{newPassword:e,repeatNewPassword:s})},saveUser:function(e){return r.post(t+"/save-user",{user:e})},getCurrentUser:function(){return r.get(t+"/current-user",{headers:{"If-Modified-Since":"0"}})},login:function(e,s){var o={ignoreAuthInterceptor:!0};return r.post(t+"/login",{username:e,password:s},o)},logout:function(){return r.post(t+"/logout",{})},isAuthenticated:function(){return r.get(t+"/is-authenticated")}}}]),angular.module("zakaz-xd.resources.orders-resource",[]).factory("OrdersResource",["$q","$http",function(e,r){var t="/orders";return{createOrder:function(e){return r.post(t+"/create-order",{order:e})},editOrder:function(e){return r.post(t+"/edit-order",{order:e})},deleteOrder:function(e){return r.post(t+"/delete-order",{orderId:e})},getAllOrders:function(e){return r.get(t+"/all-orders",{params:e})},getAllUserOrders:function(e){return r.get(t+"/user-orders",{params:e})},getOrderById:function(e){return r.get(t+"/order-by-id",{params:{orderId:e}})},getUserOrderById:function(e){return r.get(t+"/user-order-by-id",{params:{orderId:e}})},getAllOrderStatuses:function(){return r.get(t+"/all-order-statuses")}}}]),angular.module("zakaz-xd.resources.products-resource",[]).factory("ProductsResource",["$q","$http",function(e,r){var t="/products";return{createProduct:function(e){return r.post(t+"/create-product",{product:e})},editProduct:function(e){return r.post(t+"/edit-product",{product:e})},deleteProduct:function(e){return r.post(t+"/delete-product",{id:e})},getAllProducts:function(e){return r.get(t+"/all-products",{params:e})},getProductById:function(e){return r.get(t+"/product-by-id",{params:{id:e}})},getAllMeasureUnits:function(){return r.get(t+"/all-measure-units")},getAllProductTypes:function(){return r.get(t+"/all-product-types")}}}]),angular.module("zakaz-xd.resources.roles-resource",[]).factory("RolesResource",["$q","$http",function(e,r){var t="/roles";return{getAllRoles:function(){return r.get(t+"/all-roles")}}}]),angular.module("zakaz-xd.resources.user-product-prices-resource",[]).factory("UserProductPricesResource",["$q","$http",function(e,r){var t="/user-product-prices";return{getProductUserPricesByUserProductId:function(e,s){return r.get(t+"/user-product-prices-by-user-product-id",{params:{id:e,page:s.page,itemsPerPage:s.itemsPerPage}})},createUserProductPrice:function(e){return r.post(t+"/create-user-product-price",{userProductPrice:e})},deleteUserProductPrice:function(e){return r.post(t+"/delete-user-product-price",{id:e})},editUserProductPrice:function(e){return r.post(t+"/edit-user-product-price",{userProductPrice:e})},getUserProductPriceById:function(e){return r.get(t+"/user-product-price-by-id",{params:{id:e}})}}}]),angular.module("zakaz-xd.resources.user-products-resource",[]).factory("UserProductsResource",["$q","$http",function(e,r){var t="/user-products";return{getProductUsersByProductId:function(e,s){return r.get(t+"/product-users-by-product-id",{params:{id:e,page:s.page,itemsPerPage:s.itemsPerPage}})},createUserProduct:function(e){return r.post(t+"/create-user-product",{userProduct:e})},deleteUserProduct:function(e){return r.post(t+"/delete-user-product",{id:e})},editUserProduct:function(e){return r.post(t+"/edit-user-product",{userProduct:e})},getUserProductById:function(e){return r.get(t+"/user-product-by-id",{params:{id:e}})}}}]),angular.module("zakaz-xd.resources.users-resource",[]).factory("UsersResource",["$q","$http",function(e,r){var t="/users";return{createUser:function(e){return r.post(t+"/create-user",{user:e})},editUser:function(e){return r.post(t+"/edit-user",{user:e})},changePassword:function(e){return r.post(t+"/change-password",e)},deleteUser:function(e){return r.post(t+"/delete-user",{userId:e})},lockUser:function(e){return r.post(t+"/lock-user",{userId:e})},unlockUser:function(e){return r.post(t+"/unlock-user",{userId:e})},getAllUsers:function(e){return r.get(t+"/all-users",{params:e})},getUserById:function(e){return r.get(t+"/user-by-id",{params:{userId:e}})},addUserDeliveryPoint:function(e,s){return r.post(t+"/add-user-delivery-point",{userId:e,deliveryPoint:s})},updateUserDeliveryPoint:function(e,s){return r.post(t+"/update-user-delivery-point",{userId:e,deliveryPoint:s})},removeUserDeliveryPoint:function(e,s){return r.post(t+"/remove-user-delivery-point",{userId:e,deliveryPointId:s})},removeAllUserDeliveryPoints:function(e){return r.post(t+"/remove-all-user-delivery-points",{userId:e})}}}]),angular.module("zakaz-xd.directives.datepicker",["ui.bootstrap"]).directive("zDatepicker",function(){return{restrict:"E",scope:{options:"=",ngModel:"=",required:"=",name:"@"},templateUrl:"app/directives/datepicker/z-datepicker.tpl.html",controller:function(e){e.format=e.options.format||"dd.MM.yyyy",e.open=function(r){r.preventDefault(),r.stopPropagation(),e.opened=!0}}}}),angular.module("zakaz-xd.directives.decimal",["ui.bootstrap","ngSanitize"]).directive("lowercase",function(){return{restrict:"A",require:"ngModel",link:function(e,r,t,s){function o(e){return console.log("fromUser",e),(e||"").toUpperCase()}function a(e){return console.log("toUser",e),(e||"").toLowerCase()}s.$parsers.push(o),s.$formatters.push(a)}}}),angular.module("zakaz-xd.directives.pagination",["ui.bootstrap"]).directive("zPagination",function(){return{restrict:"E",scope:{config:"=?",page:"=?"},templateUrl:"app/directives/pagination/z-pagination.tpl.html",controller:function(e){e.config.maxSize=e.config.maxSize||5}}}),angular.module("zakaz-xd.demo.states",["ui.router","zakaz-xd.auth","zakaz-xd.demo"]).config(["$stateProvider","$urlRouterProvider","ACCESS",function(e){e.state("demo",{url:"/demo",controller:"DemoCtrl",templateUrl:"app/main-pages/demo/demo.tpl.html",resolve:{}})}]),angular.module("zakaz-xd.demo",["zakaz-xd.directives.decimal","ui.select","ngSanitize"]).controller("DemoCtrl",["$scope","$stateParams","$state",function(e){e.models={lowercase1:"testTEST"}}]),angular.module("zakaz-xd.manage-users.states",["ui.router","zakaz-xd.auth","zakaz-xd.dialogs","zakaz-xd.resources.users-resource","zakaz-xd.manage-users.users-list","zakaz-xd.manage-users.edit-user","zakaz-xd.manage-users.edit-user.change-password","zakaz-xd.manage-users.edit-user.delivery-point"]).config(["$stateProvider","$urlRouterProvider","ACCESS",function(e,r,t){e.state("users-list",{url:"/manage-users/users-list",controller:"UsersListCtrl",templateUrl:"app/main-pages/manage-users/users-list/users-list.tpl.html",resolve:{hasAccess:function(e,r){return r.checkAccess(t.MANAGE_USERS)}}}).state("edit-user",{url:"/manage-users/user/edit/:id",controller:"EditUserCtrl",templateUrl:"app/main-pages/manage-users/edit-user/edit-user.tpl.html",resolve:{hasAccess:function(e,r){return r.checkAccess(t.MANAGE_USERS)},user:function(e,r){return r.getUserById(e.id).then(function(e){return e.data})},allRoles:function(e,r){return r.getAllRoles().then(function(e){return e.data})}}}).state("create-user",{url:"/manage-users/user/create",controller:"EditUserCtrl",templateUrl:"app/main-pages/manage-users/edit-user/edit-user.tpl.html",resolve:{hasAccess:function(e,r){return r.checkAccess(t.MANAGE_USERS)},user:function(){return{}},allRoles:function(e,r){return r.getAllRoles().then(function(e){return e.data})}}}).state("change-user-password",{url:"/manage-users/user/change-password/:id",controller:"EditUserChangePasswordCtrl",templateUrl:"app/main-pages/manage-users/edit-user/change-password/edit-user-change-password.tpl.html",resolve:{hasAccess:function(e,r){return r.checkAccess(t.MANAGE_USERS)},user:function(e,r){return r.getUserById(e.id).then(function(e){return e.data})}}}).state("add-user-delivery-point",{url:"/manage-users/user/add-user-delivery-point/:id",controller:"EditUserDeliveryPointCtrl",templateUrl:"app/main-pages/manage-users/edit-user/delivery-point/edit-user-delivery-point.tpl.html",resolve:{hasAccess:function(e,r){return r.checkAccess(t.MANAGE_USERS)},deliveryPoint:function(){return{}},user:function(e,r){return r.getUserById(e.id).then(function(e){return e.data})}}}).state("edit-user-delivery-point",{url:"/manage-users/user/edit-user-delivery-point/:userId/:deliveryPointId",controller:"EditUserDeliveryPointCtrl",templateUrl:"app/main-pages/manage-users/edit-user/delivery-point/edit-user-delivery-point.tpl.html",resolve:{hasAccess:function(e,r){return r.checkAccess(t.MANAGE_USERS)},user:function(e,r){return r.getUserById(e.userId).then(function(e){return e.data})},deliveryPoint:function(e,r){for(var t=0;t<r.deliveryPoints.length;t++){var s=r.deliveryPoints[t];if(s._id===e.deliveryPointId)return s}return null}}})}]),angular.module("zakaz-xd.orders.states",["ui.router","zakaz-xd.auth","zakaz-xd.dialogs","zakaz-xd.resources.orders-resource","zakaz-xd.orders.orders-list","zakaz-xd.orders.edit-order"]).config(["$stateProvider","$urlRouterProvider","ACCESS",function(e,r,t){e.state("orders-list",{url:"/orders-list",controller:"OrdersListCtrl",templateUrl:"app/main-pages/orders/orders-list/orders-list.tpl.html",resolve:{user:function(e,r){return r.getCurrentUser()},hasAccess:function(e,r){return r.checkAccess(t.VIEW_OWN_ORDERS)}}}).state("edit-order",{url:"/order/edit/:id",controller:"EditOrderCtrl",templateUrl:"app/main-pages/orders/edit-order/edit-order.tpl.html",resolve:{hasAccess:function(e,r){return r.checkAccess(t.EDIT_OWN_ORDER)},order:function(e,r){return r.getOrderById(e.id).then(function(e){return e.data})},allOrderStatuses:function(e,r){return r.getAllOrderStatuses().then(function(e){return e.data})},user:function(e,r){return r.getCurrentUser()}}}).state("create-order",{url:"/order/create",controller:"EditOrderCtrl",templateUrl:"app/main-pages/orders/edit-order/edit-order.tpl.html",resolve:{hasAccess:function(e,r){return r.checkAccess(t.CREATE_ORDER)},order:function(){return{}},allOrderStatuses:function(e,r){return r.getAllOrderStatuses().then(function(e){return e.data})},user:function(e,r){return r.getCurrentUser()}}})}]),angular.module("zakaz-xd.products.states",["ui.router","zakaz-xd.auth","zakaz-xd.dialogs","zakaz-xd.resources.products-resource","zakaz-xd.products.products-list","zakaz-xd.products.edit-product","zakaz-xd.user-products.states"]).config(["$stateProvider","$urlRouterProvider","ACCESS",function(e,r,t){e.state("products-list",{url:"/products-list",controller:"ProductsListCtrl",templateUrl:"app/main-pages/products/products-list/products-list.tpl.html",resolve:{user:function(e,r){return r.getCurrentUser()},hasAccess:function(e,r){return r.checkAccess(t.MANAGE_PRODUCTS)}}}).state("edit-product",{url:"/product/edit/:id",controller:"EditProductCtrl",templateUrl:"app/main-pages/products/edit-product/edit-product.tpl.html",resolve:{hasAccess:function(e,r){return r.checkAccess(t.MANAGE_PRODUCTS)},product:function(e,r){return r.getProductById(e.id).then(function(e){return e.data})},user:function(e,r){return r.getCurrentUser()},allMeasureUnits:function(e,r){return r.getAllMeasureUnits().then(function(e){return e.data})},allProductTypes:function(e,r){return r.getAllProductTypes().then(function(e){return e.data})}}}).state("create-product",{url:"/product/create",controller:"EditProductCtrl",templateUrl:"app/main-pages/products/edit-product/edit-product.tpl.html",resolve:{hasAccess:function(e,r){return r.checkAccess(t.MANAGE_PRODUCTS)},product:function(){return{}},user:function(e,r){return r.getCurrentUser()},allMeasureUnits:function(e,r){return r.getAllMeasureUnits().then(function(e){return e.data})},allProductTypes:function(e,r){return r.getAllProductTypes().then(function(e){return e.data})}}})}]),angular.module("zakaz-xd.user-products.states",["ui.router","zakaz-xd.auth","zakaz-xd.dialogs","zakaz-xd.resources.user-products-resource","zakaz-xd.resources.user-product-prices-resource","zakaz-xd.resources.products-resource","zakaz-xd.user-products.product-users-list","zakaz-xd.user-products.edit-user-product","zakaz-xd.user-product-prices.edit-user-product-price"]).config(["$stateProvider","$urlRouterProvider","ACCESS",function(e,r,t){e.state("product-users-list",{url:"/product-users-list/:id",controller:"ProductUsersListCtrl",templateUrl:"app/main-pages/user-products/product-users-list/product-users-list.tpl.html",resolve:{product:function(e,r){return r.getProductById(e.id).then(function(e){return e.data})},hasAccess:function(e,r){return r.checkAccess(t.MANAGE_PRODUCTS)}}}).state("create-user-product",{url:"/product/user-product/create/:productId",controller:"EditUserProductCtrl",templateUrl:"app/main-pages/user-products/edit-user-product/edit-user-product.tpl.html",resolve:{hasAccess:function(e,r){return r.checkAccess(t.MANAGE_PRODUCTS)},product:function(e,r){return r.getProductById(e.productId).then(function(e){return e.data})},userProduct:function(e){return{product:e}}}}).state("edit-user-product",{url:"/product/user-product/edit/:userProductId",controller:"EditUserProductCtrl",templateUrl:"app/main-pages/user-products/edit-user-product/edit-user-product.tpl.html",resolve:{hasAccess:function(e,r){return r.checkAccess(t.MANAGE_PRODUCTS)},userProduct:function(e,r){return r.getUserProductById(e.userProductId).then(function(e){return e.data})},product:function(e,r,t){return r.getProductById(t.product._id).then(function(e){return e.data})}}}).state("add-user-product-price",{url:"/product/user-product/add-user-product-price/:userProductId",controller:"EditUserProductPriceCtrl",templateUrl:"app/main-pages/user-products/edit-user-product-price/edit-user-product-price.tpl.html",resolve:{hasAccess:function(e,r){return r.checkAccess(t.MANAGE_PRODUCTS)},userProductPrice:function(e,r){return r.getUserProductById(e.userProductId).then(function(e){return{userProduct:e.data}})}}}).state("edit-user-product-price",{url:"/product/user-product/edit-user-product-price/:userProductPriceId",controller:"EditUserProductPriceCtrl",templateUrl:"app/main-pages/user-products/edit-user-product-price/edit-user-product-price.tpl.html",resolve:{hasAccess:function(e,r){return r.checkAccess(t.MANAGE_PRODUCTS)},userProductPrice:function(e,r){return r.getUserProductPriceById(e.userProductPriceId).then(function(e){return e.data})}}})}]),angular.module("zakaz-xd.user-profile",["zakaz-xd.dialogs","zakaz-xd.resources.auth-resource","zakaz-xd.auth"]).controller("UserProfileCtrl",["$scope","$stateParams","$state","$http","user","AuthResource","ErrorDialog","InfoDialog","AuthService",function(e,r,t,s,o,a,n,i,l){e.user=angular.copy(o),e.data={newPassword:null,repeatNewPassword:null},e.save=function(r){return r?!1:(a.saveUser(e.user).then(function(){l.reloadCurrentUser().then(function(r){e.user=angular.copy(r),i.open("Успешное сохранение изменений","Сохранение изменений")},function(e){n.open(e,!0)})},function(e){n.open(e,!0)}),void 0)},e.changePassword=function(r){return r?!1:e.data.newPassword!==e.data.repeatNewPassword?n.open({message:"Пароли не совпадают"}):(a.changePassword(e.data.newPassword,e.data.repeatNewPassword).then(function(){i.open('Ваш пароль успешно <span style="color: blue;"> изменен <span>',"Изменение пароля")},function(e){n.open(e,!0)}),void 0)}}]),angular.module("zakaz-xd.auth.login-form",["zakaz-xd.auth","zakaz-xd.dialogs"]).controller("LoginFormCtrl",["$scope","$stateParams","$state","AuthService","ErrorDialog",function(e,r,t,s,o){e.credentials={username:null,password:null,rememberMe:null},e.login=function(r){return r?!1:(s.login(e.credentials.username,e.credentials.password).then(function(){e.errorMsg=null,t.go("orders-list")},function(e){o.open(e.data)}),void 0)}}]),angular.module("zakaz-xd.manage-users.edit-user",["zakaz-xd.dialogs","zakaz-xd.resources.users-resource","zakaz-xd.resources.roles-resource","zakaz-xd.auth"]).controller("EditUserCtrl",["$scope","$stateParams","$state","UsersResource","ErrorDialog","InfoDialog","YesNoDialog","user","allRoles",function(e,r,t,s,o,a,n,i,l){function c(e,r){if(r.roles){for(var t={},s=0;s<e.length;s++){var o=e[s];t[o._id]=o}for(var a=0;a<r.roles.length;a++){var n=r.roles[a];t[n._id]&&(t[n._id].checked=!0)}}}function d(e,r){for(var t=[],s=0;s<e.length;s++){var o=e[s];o.checked&&t.push(o)}r.roles=t}e.isCreate=!i._id,e.allRoles=l,e.user=i,e.user.roles||(e.user.roles=[]),c(l,i),e.save=function(r){return r?!1:(d(e.allRoles,e.user),e.isCreate?s.createUser(e.user).then(function(){a.open("Пользователь успешно добавлен"),t.go("users-list")},function(e){o.open(e.data,!0)}):s.editUser(e.user).then(function(){a.open("Пользователь успешно сохранен"),t.go("users-list")},function(e){o.open(e.data,!0)}),void 0)},e.lockUser=function(){n.open("Вы действительно хотите заблокировать пользователя?").then(function(){s.lockUser(e.user._id).then(function(){a.open("Пользователь заблокирован"),t.go("edit-user",{id:e.user._id},{reload:!0})},function(e){o.open(e.data,!0)})})},e.unlockUser=function(){n.open("Вы действительно хотите разблокировать пользователя?").then(function(){s.unlockUser(e.user._id).then(function(){a.open("Пользователь разблокирован"),t.go("edit-user",{id:e.user._id},{reload:!0})},function(e){o.open(e.data,!0)})})},e.deleteUser=function(){n.open("Вы действительно хотите удалить пользователя?").then(function(){s.deleteUser(e.user._id).then(function(){a.open("Пользователь удален"),t.go("users-list")},function(e){o.open(e.data,!0)})})},e.removeAllUserDeliveryPoints=function(){n.open("Вы действительно хотите удалить все точки доставки пользователя?").then(function(){s.removeAllUserDeliveryPoints(e.user._id).then(function(){a.open("Все точки доствки пользователя удалены"),t.reload()},function(e){o.open(e.data,!0)})})}}]),angular.module("zakaz-xd.manage-users.users-list",["zakaz-xd.dialogs","zakaz-xd.directives.pagination","zakaz-xd.resources.users-resource","zakaz-xd.auth"]).controller("UsersListCtrl",["$scope","$stateParams","$state","UsersResource","ErrorDialog","InfoDialog",function(e,r,t,s,o){function a(r){s.getAllUsers(r).then(function(r){e.userList=r.data.items,e.pageConfig.count=r.data.count},function(e){o.open(e.data)})}e.userList=[],e.pageConfig={page:1,itemsPerPage:10,pageChanged:function(e,r){a({page:e,itemsPerPage:r})}},a({page:e.pageConfig.page,itemsPerPage:e.pageConfig.itemsPerPage})}]),angular.module("zakaz-xd.orders.edit-order",["zakaz-xd.dialogs","zakaz-xd.resources.orders-resource","zakaz-xd.auth"]).controller("EditOrderCtrl",["$scope","$stateParams","$state","OrdersResource","ErrorDialog","InfoDialog","YesNoDialog","order","user",function(e,r,t,s,o,a,n,i){e.isCreate=!i._id,e.order=i,e.save=function(r){return console.log(r),r?!1:(e.isCreate?s.createOrder(e.order).then(function(){a.open("Ваш заказ успешно создан"),t.go("orders-list")},function(e){o.open(e.data,!0)}):s.editOrder(e.order).then(function(){a.open("Ваш заказ успешно изменен"),t.go("orders-list")},function(e){o.open(e.data,!0)}),void 0)},e.deleteOrder=function(){n.open("Вы действительно хотите удалить заказ?").then(function(){s.deleteOrder(e.order._id).then(function(){a.open("Заказ удален"),t.go("orders-list")},function(e){o.open(e.data,!0)})})}}]),angular.module("zakaz-xd.orders.orders-list",["zakaz-xd.dialogs","zakaz-xd.directives.pagination","zakaz-xd.resources.orders-resource","zakaz-xd.auth"]).controller("OrdersListCtrl",["$scope","$stateParams","$state","OrdersResource","ErrorDialog","InfoDialog","user",function(e,r,t,s,o,a,n){function i(r){s.getAllUserOrders(r).then(function(r){e.orderList=r.data.items,e.pageConfig.count=r.data.count},function(e){o.open(e.data)})}e.user=n,e.orderList=[],e.pageConfig={page:1,itemsPerPage:10,pageChanged:function(e,r){i({page:e,itemsPerPage:r})}},i({page:e.pageConfig.page,itemsPerPage:e.pageConfig.itemsPerPage})}]),angular.module("zakaz-xd.products.edit-product",["zakaz-xd.dialogs","zakaz-xd.resources.products-resource","zakaz-xd.auth","ui.select","ngSanitize"]).controller("EditProductCtrl",["$scope","$stateParams","$state","ProductsResource","ErrorDialog","InfoDialog","YesNoDialog","product","user","allMeasureUnits","allProductTypes",function(e,r,t,s,o,a,n,i,l,c,d){e.isCreate=!i._id,e.product=i,e.allMeasureUnits=c,e.allProductTypes=d,e.save=function(r){return r?!1:(e.isCreate?s.createProduct(e.product).then(function(){a.open("Товар успешно создан"),t.go("products-list")},function(e){o.open(e.data)}):s.editProduct(e.product).then(function(){a.open("Товар успешно изменен"),t.go("products-list")},function(e){o.open(e.data)}),void 0)},e.deleteProduct=function(){n.open("Вы действительно хотите удалить продукт?").then(function(){s.deleteProduct(e.product._id).then(function(){a.open("Продукт удален"),t.go("products-list")},function(e){o.open(e.data,!0)})})}}]),angular.module("zakaz-xd.products.products-list",["zakaz-xd.dialogs","zakaz-xd.directives.pagination","zakaz-xd.resources.products-resource","zakaz-xd.auth"]).controller("ProductsListCtrl",["$scope","$stateParams","$state","ProductsResource","ErrorDialog","InfoDialog","user",function(e,r,t,s,o,a,n){function i(r){s.getAllProducts(r).then(function(r){e.productList=r.data.items,e.pageConfig.count=r.data.count},function(e){o.open(e.data)})}e.user=n,e.productList=[],e.pageConfig={page:1,itemsPerPage:10,pageChanged:function(e,r){i({page:e,itemsPerPage:r})}},i({page:e.pageConfig.page,itemsPerPage:e.pageConfig.itemsPerPage})}]),angular.module("zakaz-xd.user-products.edit-user-product",["zakaz-xd.dialogs","zakaz-xd.resources.user-products-resource","zakaz-xd.resources.user-product-prices-resource","zakaz-xd.resources.users-resource","zakaz-xd.auth","ui.select","ngSanitize"]).controller("EditUserProductCtrl",["$scope","$stateParams","$state","UserProductsResource","UsersResource","UserProductPricesResource","ErrorDialog","InfoDialog","YesNoDialog","userProduct",function(e,r,t,s,o,a,n,i,l,c){function d(r){a.getProductUserPricesByUserProductId(e.userProduct._id,r).then(function(r){e.userProductPrices=r.data.items,e.pageConfig.count=r.data.count},function(e){n.open(e.data)})}e.isCreate=!c._id,e.userProduct=c,o.getAllUsers().then(function(r){e.allUserList=r.data},function(e){n.open(e.data)}),e.isCreate||(e.userProductPrices=[],e.pageConfig={page:1,itemsPerPage:5,pageChanged:function(e,r){d({page:e,itemsPerPage:r})}},d({page:e.pageConfig.page,itemsPerPage:e.pageConfig.itemsPerPage})),e.save=function(r){return r?!1:(e.isCreate?s.createUserProduct(e.userProduct).then(function(){i.open("Связь товара с пользователем успешно создана"),t.go("product-users-list",{id:e.userProduct.product._id})},function(e){n.open(e.data)}):s.editUserProduct(e.userProduct).then(function(){i.open("Изменение связи товара с пользователем успешно"),t.go("product-users-list",{id:e.userProduct.product._id})},function(e){n.open(e.data)}),void 0)},e.delete=function(){l.open("Вы действительно хотите удалить связь продукта и пользователя?").then(function(){s.deleteUserProduct(e.userProduct._id).then(function(){i.open("Связь с пользователем удалена"),t.go("product-users-list",{id:e.userProduct.product._id})},function(e){n.open(e.data,!0)})})}}]),angular.module("zakaz-xd.user-product-prices.edit-user-product-price",["zakaz-xd.dialogs","zakaz-xd.resources.user-products-resource","zakaz-xd.resources.user-product-prices-resource","zakaz-xd.directives.datepicker","zakaz-xd.auth","ui.select","ngSanitize"]).controller("EditUserProductPriceCtrl",["$scope","$stateParams","$state","UserProductsResource","UserProductPricesResource","ErrorDialog","InfoDialog","YesNoDialog","userProductPrice",function(e,r,t,s,o,a,n,i,l){e.isCreate=!l._id,e.userProductPrice=l,e.save=function(r){return r?!1:(console.log("$scope.userProductPrice",e.userProductPrice),e.isCreate?o.createUserProductPrice(e.userProductPrice).then(function(){n.open("Цена на связь пользователь-торвар создана"),t.go("edit-user-product",{userProductId:e.userProductPrice.userProduct._id})},function(e){a.open(e.data)}):o.editUserProductPrice(e.userProductPrice).then(function(){n.open("Изменение цены для связи пользователь-товар успешно"),t.go("edit-user-product",{userProductId:e.userProductPrice.userProduct._id})},function(e){a.open(e.data)}),void 0)},e.delete=function(){i.open("Вы действительно хотите удалить цену на связь пользователь-товар?").then(function(){o.deleteUserProductPrice(e.userProductPrice._id).then(function(){n.open("Цена на связь пользователь-товар удалена"),t.go("edit-user-product",{userProductId:e.userProductPrice.userProduct._id})},function(e){a.open(e.data,!0)})})}}]),angular.module("zakaz-xd.user-products.product-users-list",["zakaz-xd.dialogs","zakaz-xd.directives.pagination","zakaz-xd.resources.user-products-resource","zakaz-xd.auth"]).controller("ProductUsersListCtrl",["$scope","$stateParams","$state","UserProductsResource","ErrorDialog","InfoDialog","product",function(e,r,t,s,o,a,n){function i(r){s.getProductUsersByProductId(e.product._id,r).then(function(r){e.items=r.data.items,e.pageConfig.count=r.data.count},function(e){o.open(e.data)})}e.product=n,e.items=[],e.pageConfig={page:1,itemsPerPage:10,pageChanged:function(e,r){i({page:e,itemsPerPage:r})}},i({page:e.pageConfig.page,itemsPerPage:e.pageConfig.itemsPerPage})}]),angular.module("zakaz-xd.manage-users.edit-user.change-password",["zakaz-xd.dialogs","zakaz-xd.resources.users-resource","zakaz-xd.resources.roles-resource","zakaz-xd.auth"]).controller("EditUserChangePasswordCtrl",["$scope","$stateParams","$state","UsersResource","ErrorDialog","InfoDialog","user",function(e,r,t,s,o,a,n){e.user=n,e.data={newPassword:null,repeatNewPassword:null},e.changePassword=function(r){if(r)return!1;
if(e.data.newPassword!==e.data.repeatNewPassword)return o.open({message:"Пароли не совпадают"});var n={userId:e.user._id,newPassword:e.data.newPassword,repeatNewPassword:e.data.repeatNewPassword};s.changePassword(n).then(function(){a.open("Пароль пользователя успешно изменен","Изменение пароля"),t.go("users-list")},function(e){o.open(e,!0)})}}]),angular.module("zakaz-xd.manage-users.edit-user.delivery-point",["zakaz-xd.dialogs","zakaz-xd.resources.users-resource","zakaz-xd.auth"]).controller("EditUserDeliveryPointCtrl",["$scope","$stateParams","$state","UsersResource","ErrorDialog","InfoDialog","YesNoDialog","user","deliveryPoint",function(e,r,t,s,o,a,n,i,l){e.isCreate=!l._id,e.user=i,e.deliveryPoint=l,e.save=function(r){return r?!1:(e.isCreate?s.addUserDeliveryPoint(e.user._id,e.deliveryPoint).then(function(){a.open("Точка доставки добавлена"),t.go("edit-user",{id:e.user._id})},function(e){o.open(e.data,!0)}):s.updateUserDeliveryPoint(e.user._id,e.deliveryPoint).then(function(){a.open("Изменение точки доставки успешно"),t.go("edit-user",{id:e.user._id})},function(e){o.open(e.data,!0)}),void 0)},e.delete=function(){n.open("Вы действительно хотите удалить точку доставки?").then(function(){s.removeUserDeliveryPoint(e.user._id,e.deliveryPoint._id).then(function(){a.open("Точка доставки удалена"),t.go("edit-user",{id:e.user._id})},function(e){o.open(e.data,!0)})})}}]),angular.module("zakaz-xd.main").run(["$templateCache",function(e){e.put("dialogs/error-dialog.tpl.html",'<div class="modal-header"><button type="button" class="close" ng-click="close()" aria-label="Закрыть"><span aria-hidden="true">&times;</span></button><h4 class="modal-title">Ошибка</h4></div><div class="modal-body"><div role="alert" class="alert alert-danger">{{error.message}}</div><pre data-ng-if="error.stack && printStack">{{error.stack}}></pre></div><div class="modal-footer"><button class="btn btn-primary" ng-click="close()">Закрыть</button></div>'),e.put("dialogs/info-dialog.tpl.html",'<div class="modal-header"><button type="button" class="close" ng-click="close()" aria-label="Закрыть"><span aria-hidden="true">&times;</span></button><h4 ng-if="title" class="modal-title">{{title}}</h4><h4 ng-if="!title" class="modal-title">Информация</h4></div><div class="modal-body"><div role="alert" class="alert alert-success" ng-bind-html="message"></div></div><div class="modal-footer"><button class="btn btn-primary" ng-click="close()">Закрыть</button></div>'),e.put("dialogs/yes-no-dialog.tpl.html",'<div class="modal-header"><button type="button" class="close" ng-click="close()" aria-label="Закрыть"><span aria-hidden="true">&times;</span></button><h4 ng-if="title" class="modal-title">{{title}}</h4><h4 ng-if="!title" class="modal-title">Запрос на изменение</h4></div><div class="modal-body"><p ng-bind-html="message"></p></div><div class="modal-footer"><button class="btn btn-primary" ng-click="yes()">Да</button> <button class="btn btn-default" ng-click="no()">Нет</button></div>'),e.put("includes/footer.tpl.html",'<div class="copyright">© 2015 Заказы "Хлебный Дом"</div>'),e.put("includes/header.tpl.html",'<div class="navbar-inner"><button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse"><span class="sr-only">Toggle Navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span></button><nav class="collapse navbar-collapse" role="navigation"><ul class="nav navbar-nav navbar-right"><li ng-show="isLogin() && AuthService.hasAccessByCodes(\'VIEW_OWN_ORDERS\')"><a data-ui-sref="orders-list">Заказы</a></li><li data-ng-show="isLogin() && AuthService.hasAccessByCodes(\'MANAGE_USERS,MANAGE_ORDERS,MANAGE_PRODUCTS\')" class="dropdown"><a href="javascript:void(0)" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Администрирование <span class="caret"></span></a><ul class="dropdown-menu"><li ng-if="AuthService.hasAccessByCodes(\'MANAGE_USERS\')"><a href="#/manage-users/users-list">Управление пользователями</a></li><li ng-if="AuthService.hasAccessByCodes(\'MANAGE_PRODUCTS\')"><a data-ui-sref="products-list">Управление товарами</a></li><li ng-if="AuthService.hasAccessByCodes(\'MANAGE_ORDERS\')"><a data-ui-sref="all-orders">Управление заказами</a></li></ul></li><li ng-show="isLogin()"><a href="#/profile">{{currentUser().username}}</a></li><li ng-show="isLogin()"><a data-ng-click="logout()" href="javascript:void(0)">Выйти</a></li><li ng-show="!isLogin()"><a href="#/login">Войти</a></li></ul></nav></div>'),e.put("directives/datepicker/z-datepicker.tpl.html",'<p class="input-group"><input type="text" class="form-control" datepicker-popup="{{format}}" ng-model="ngModel" name="name" datepicker-options="options" ng-required="required" is-open="opened" datepicker-append-to-body="true" clear-text="Очистить" close-text="Закрыть" current-text="Сегодня"> <span class="input-group-btn"><button type="button" class="btn btn-default" ng-click="open($event)"><i class="glyphicon glyphicon-calendar"></i></button></span></p>'),e.put("directives/pagination/z-pagination.tpl.html",'<pagination total-items="config.count" ng-model="page" max-size="config.maxSize" items-per-page="config.itemsPerPage" ng-change="config.pageChanged(page, config.itemsPerPage)" class="pagination-sm" boundary-links="true" rotate="false" previous-text="&lsaquo;" next-text="&rsaquo;" first-text="&laquo;" last-text="&raquo;"></pagination>'),e.put("main-pages/demo/demo.tpl.html",'<h4>Demo</h4><form class="form-horizontal" name="demoForm" novalidate=""><div class="form-group"><label class="col-sm-2 control-label">lowercase</label><div class="col-sm-10"><input type="text" class="form-control" name="lowercase1" data-ng-model="models.lowercase1" lowercase=""> {{models.lowercase1}}</div></div><div class="form-group"><div class="col-sm-2"><button type="submit" class="btn btn-primary">Сохранить</button></div></div></form>'),e.put("main-pages/user-profile/user-profile-change-password.tpl.html",'<h4>Изменение пароля пользователя</h4><form class="form-horizontal" ng-submit="changePassword(changePasswordForm.$invalid)" name="changePasswordForm" novalidate=""><div class="form-group"><label class="col-sm-2 control-label">Имя</label><div class="col-sm-10"><p class="form-control-static">{{user.username}}</p></div></div><div class="form-group required" ng-class="{\'has-error\': changePasswordForm.$submitted && changePasswordForm.newPassword.$error.required}"><label for="inputPassword" class="col-sm-2 control-label">Новый пароль</label><div class="col-sm-10"><input type="password" name="newPassword" class="form-control" id="inputPassword" placeholder="Новый пароль" data-ng-model="data.newPassword" required=""></div></div><div class="form-group required" ng-class="{\'has-error\': changePasswordForm.$submitted && changePasswordForm.repeatNewPassword.$error.required}"><label for="inputPassword2" class="col-sm-2 control-label">Повторить новый пароль</label><div class="col-sm-10"><input type="password" name="repeatNewPassword" class="form-control" id="inputPassword2" placeholder="Повторить новый пароль" data-ng-model="data.repeatNewPassword" required=""></div></div><div class="form-group"><div class="col-sm-offset-2 col-sm-10"><button type="submit" class="btn btn-primary">Изменить пароль</button></div></div></form>'),e.put("main-pages/user-profile/user-profile.tpl.html",'<h4>Профиль пользователя</h4><ul class="nav nav-pills"><li role="presentation"><a ui-sref="user-profile-change-password">Сменить пароль</a></li></ul><form class="form-horizontal" ng-submit="save(changeUserForm.$invalid)" name="changeUserForm" novalidate=""><div class="form-group"><label class="col-sm-2 control-label">Имя</label><div class="col-sm-10"><p class="form-control-static">{{user.username}}</p></div></div><div class="form-group" ng-class="{\'has-error\': changeUserForm.$submitted && changeUserForm.email.$error.pattern}"><label for="email" class="col-sm-2 control-label">E-mail</label><div class="col-sm-10"><input type="email" class="form-control" id="email" name="email" placeholder="E-mail" data-ng-model="user.email" data-ng-pattern="/^[a-z0-9!#$%&\'*+/=?^_`{|}~.-]+@[a-z0-9-]+(\\.[a-z0-9-]+)*$/i"></div></div><div class="form-group"><div class="col-sm-offset-2 col-sm-10"><button type="submit" class="btn btn-primary">Сохранить</button></div></div></form>'),e.put("main-pages/auth/access-denied/access-denied.tpl.html",'<div role="alert" class="alert alert-danger">У вас нет доступа к ресурсу.</div>'),e.put("main-pages/auth/login-form/login-form.tpl.html",'<form class="form-horizontal" ng-submit="login(loginForm.$invalid)" name="loginForm" novalidate=""><div class="form-group required" ng-class="{\'has-error\': loginForm.$submitted && loginForm.username.$error.required}"><label for="inputUser3" class="col-sm-2 control-label">Имя</label><div class="col-sm-10"><input type="text" name="username" class="form-control" id="inputUser3" placeholder="Имя пользователя" data-ng-model="credentials.username" required=""> <span class="text-danger" ng-show="loginForm.$submitted && loginForm.username.$error.required">Поле обязательно для заполнения</span></div></div><div class="form-group required" ng-class="{\'has-error\': loginForm.$submitted && loginForm.password.$error.required}"><label for="inputPassword3" class="col-sm-2 control-label">Пароль</label><div class="col-sm-10"><input type="password" name="password" class="form-control" id="inputPassword3" placeholder="Пароль" data-ng-model="credentials.password" required=""> <span class="text-danger" ng-show="loginForm.$submitted && loginForm.password.$error.required">Поле обязательно для заполнения</span></div></div><div class="form-group"><div class="col-sm-offset-2 col-sm-10"><div class="checkbox"><label><input type="checkbox" data-ng-model="credentials.rememberMe"> Запомнить меня</label></div></div></div><div class="form-group"><div class="col-sm-offset-2 col-sm-10"><button type="submit" class="btn btn-default">Войти</button></div></div></form>'),e.put("main-pages/auth/logout-success/logout-success.tpl.html",'<div role="alert" class="alert alert-success">Вы успешно вышли. <a ui-sref="login">Войти</a></div>'),e.put("main-pages/auth/not-authenticated/not-authenticated.tpl.html",'<div role="alert" class="alert alert-danger">Вы неавторизованы. <a ui-sref="login">Войти</a></div>'),e.put("main-pages/manage-users/edit-user/edit-user.tpl.html",'<h4 ng-if="isCreate">Создание нового пользователя</h4><h4 ng-if="!isCreate">Редактирование пользователя</h4><form class="form-horizontal" ng-submit="save(changeUserForm.$invalid)" name="changeUserForm" novalidate=""><div class="form-group required" ng-class="{\'has-error\': changeUserForm.$submitted && changeUserForm.username.$error.required}"><label class="col-sm-2 control-label">Имя</label><div class="col-sm-10"><input type="text" class="form-control" name="username" placeholder="Имя пользователя" data-ng-model="user.username" required=""></div></div><div class="form-group" ng-class="{\'has-error\': changeUserForm.$submitted && changeUserForm.email.$error.pattern}"><label for="email" class="col-sm-2 control-label">E-mail</label><div class="col-sm-10"><input type="email" class="form-control" id="email" name="email" placeholder="E-mail" data-ng-model="user.email" data-ng-pattern="/^[a-z0-9!#$%&\'*+/=?^_`{|}~.-]+@[a-z0-9-]+(\\.[a-z0-9-]+)*$/i"></div></div><div class="form-group required" ng-if="isCreate" ng-class="{\'has-error\': changeUserForm.$submitted && changeUserForm.newPassword.$error.required}"><label for="inputPassword" class="col-sm-2 control-label">Пароль</label><div class="col-sm-10"><input type="password" name="newPassword" class="form-control" id="inputPassword" placeholder="Пароль" data-ng-model="user.password" required=""></div></div><div class="form-group required" ng-if="isCreate" ng-class="{\'has-error\': changeUserForm.$submitted && changeUserForm.repeatNewPassword.$error.required}"><label for="inputPassword2" class="col-sm-2 control-label">Повторить пароль</label><div class="col-sm-10"><input type="password" name="repeatNewPassword" class="form-control" id="inputPassword2" placeholder="Повторить пароль" data-ng-model="user.repeatPassword" required=""></div></div><div class="form-group"><label class="col-sm-2 control-label">Роли</label><div class="col-sm-10"><table class="table table-bordered"><thead><tr><th>#</th><th>Роль</th></tr></thead><tbody><tr ng-repeat="role in allRoles"><td><input type="checkbox" ng-model="role.checked"></td><td>{{role.title}}</td></tr></tbody></table></div></div><div class="form-group"><label class="col-sm-2 control-label">Точки доставки</label><div class="col-sm-10"><div class="row"><div class="col-sm-12"><table class="table table-bordered"><thead><tr><th>Наименование</th><th>Адрес</th></tr></thead><tbody><tr ng-repeat="deliveryPoint in user.deliveryPoints"><td><a data-ui-sref="edit-user-delivery-point({userId: user._id, deliveryPointId: deliveryPoint._id})">{{deliveryPoint.title}}</a></td><td>{{deliveryPoint.address}}</td></tr></tbody></table></div></div><div class="row" ng-if="!isCreate"><div class="col-sm-6"><a data-ui-sref="add-user-delivery-point({id: user._id})">Добавить точку доставки</a></div><div class="col-sm-6 text-right"><button type="button" data-ng-click="removeAllUserDeliveryPoints()" class="btn btn-danger">Удалить все точки доставки</button></div></div></div></div><div class="form-group"><div class="col-sm-3"><button type="submit" class="btn btn-primary">Сохранить</button> <a ng-if="!isCreate" data-ui-sref="change-user-password({id: user._id})">Сменить пароль</a></div><div class="col-sm-9 text-right" ng-if="!isCreate"><button ng-if="!user.locked" type="button" data-ng-click="lockUser()" class="btn btn-warning">Заблокировать</button> <button ng-if="user.locked" type="button" data-ng-click="unlockUser()" class="btn btn-warning">Разблокировать</button> <button type="button" data-ng-click="deleteUser()" class="btn btn-danger">Удалить</button></div></div></form>'),e.put("main-pages/manage-users/users-list/users-list.tpl.html",'<div class="row"><div class="col-sm-6"><h4>Список пользователей</h4></div><div class="col-sm-6 text-right"><a ui-sref="create-user" class="btn btn-success">Создать пользователя</a></div></div><div class="row"><div class="col-sm-12"><z-pagination config="pageConfig" page="pageConfig.page"></z-pagination></div></div><div class="row"><div class="col-sm-12"><table class="table"><thead><tr><th>Имя пользователя</th><th>Email</th></tr></thead><tbody><tr data-ng-repeat="user in userList"><td><a ui-sref="edit-user({id: user._id})">{{user.username}}</a></td><td>{{user.email}}</td></tr></tbody></table></div></div>'),e.put("main-pages/orders/edit-order/edit-order.tpl.html",'<h4 ng-if="isCreate">Создание заказа</h4><h4 ng-if="!isCreate">Редактирование заказа</h4><form class="form-horizontal" ng-submit="save(changeOrderForm.$invalid)" name="changeOrderForm" novalidate=""><div class="form-group required" ng-class="{\'has-error\': changeOrderForm.$submitted && changeOrderForm.title.$error.required}"><label class="col-sm-2 control-label">Наименование</label><div class="col-sm-10"><input type="text" class="form-control" name="title" placeholder="Наименование заказа" data-ng-model="order.title" required=""></div></div><div class="form-group"><label class="col-sm-2 control-label">Текст</label><div class="col-sm-10"><textarea class="form-control" name="message" placeholder="Текст заказа" rows="6" data-ng-model="order.message">\r\n            </textarea></div></div><div class="form-group"><div class="col-sm-2"><button type="submit" class="btn btn-primary">Сохранить</button></div><div class="col-sm-10 text-right" ng-if="!isCreate"><button type="button" data-ng-click="deleteOrder()" class="btn btn-danger">Удалить</button></div></div></form>'),e.put("main-pages/orders/orders-list/orders-list.tpl.html",'<div class="row"><div class="col-sm-6"><h4>Список заказов пользователя {{user.username}}</h4></div><div class="col-sm-6 text-right"><a ui-sref="create-order" class="btn btn-success">Создать заказ</a></div></div><div class="row"><div class="col-sm-12"><z-pagination config="pageConfig" page="pageConfig.page"></z-pagination></div></div><div class="row"><div class="col-sm-12"><table class="table"><thead><tr><th>Наименование</th><th>Дата создания</th></tr></thead><tbody><tr data-ng-repeat="order in orderList"><td><a ui-sref="edit-order({id: order._id})">{{order.title}}</a></td><td>{{order.createdDate}}</td></tr></tbody></table></div></div>'),e.put("main-pages/products/edit-product/edit-product.tpl.html",'<h4 ng-if="isCreate">Создание товара</h4><h4 ng-if="!isCreate">Редактирование товара</h4><form class="form-horizontal" ng-submit="save(changeProductForm.$invalid)" name="changeProductForm" novalidate=""><div class="form-group required" ng-class="{\'has-error\': changeProductForm.$submitted && changeProductForm.title.$error.required}"><label class="col-sm-2 control-label">Наименование</label><div class="col-sm-10"><input type="text" class="form-control" name="title" placeholder="Наименование" data-ng-model="product.title" required=""></div></div><div class="form-group" ng-if="!isCreate"><label class="col-sm-2 control-label">Дата создания</label><div class="col-sm-10"><p class="form-control-static">{{product.createdDate | date:\'dd.MM.yyyy HH:mm:ss\'}}</p></div></div><div class="form-group required" ng-class="{\'has-error\': changeProductForm.$submitted && changeProductForm.measureUnit.$error.required}"><label class="col-sm-2 control-label">Единица измерения</label><div class="col-sm-10"><ui-select ng-model="product.measureUnit" theme="bootstrap" name="measureUnit" required=""><ui-select-match placeholder="Единица измерения" allow-clear="true">{{$select.selected.title}}</ui-select-match><ui-select-choices repeat="item in allMeasureUnits | filter: $select.search"><div ng-bind-html="item.title | highlight: $select.search"></div></ui-select-choices></ui-select></div></div><div class="form-group"><label class="col-sm-2 control-label">Тип</label><div class="col-sm-10"><ui-select ng-model="product.type" theme="bootstrap" name="type"><ui-select-match placeholder="Тип" allow-clear="true">{{$select.selected.title}}</ui-select-match><ui-select-choices repeat="item in allProductTypes | filter: $select.search"><div ng-bind-html="item.title | highlight: $select.search"></div></ui-select-choices></ui-select></div></div><div class="form-group"><label class="col-sm-2 control-label">Кратность в упаковке</label><div class="col-sm-10"><input type="text" class="form-control" name="packageMultiplicity" placeholder="Кратность в упаковке" data-ng-model="product.packageMultiplicity"></div></div><div class="form-group"><label class="col-sm-2 control-label">Штрих код</label><div class="col-sm-10"><input type="text" class="form-control" name="barcode" placeholder="Штрих код" data-ng-model="product.barcode"></div></div><div class="form-group"><div class="col-sm-2"><button type="submit" class="btn btn-primary">Сохранить</button></div><div class="col-sm-10 text-right" ng-if="!isCreate"><a data-ui-sref="product-users-list({id: product._id})">Список пользователей товара</a> <button type="button" data-ng-click="deleteProduct()" class="btn btn-danger">Удалить</button></div></div></form>'),e.put("main-pages/products/products-list/products-list.tpl.html",'<div class="row"><div class="col-sm-6"><h4>Список товаров</h4></div><div class="col-sm-6 text-right"><a ui-sref="create-product" class="btn btn-success">Создать товар</a></div></div><div class="row"><div class="col-sm-12"><z-pagination config="pageConfig" page="pageConfig.page"></z-pagination></div></div><div class="row"><div class="col-sm-12"><table class="table"><thead><tr><th>Наименование</th><th>Дата создания</th><th>Единица измерения</th><th>Тип</th></tr></thead><tbody><tr data-ng-repeat="product in productList"><td><a ui-sref="edit-product({id: product._id})">{{product.title}}</a></td><td>{{product.createdDate | date:\'dd.MM.yyyy HH:mm:ss\'}}</td><td>{{product.measureUnit.title}}</td><td>{{product.type.title}}</td></tr></tbody></table></div></div>'),e.put("main-pages/user-products/edit-user-product/edit-user-product.tpl.html",'<h4 ng-if="isCreate">Создание связи товара с пользователем</h4><h4 ng-if="!isCreate">Редактирование связи товара с пользователем</h4><form class="form-horizontal" ng-submit="save(changeForm.$invalid)" name="changeForm" novalidate=""><div class="form-group"><label class="col-sm-2 control-label">Продукт</label><div class="col-sm-10"><p class="form-control-static">{{userProduct.product.title}}</p></div></div><div class="form-group required" ng-class="{\'has-error\': changeForm.$submitted && changeForm.user.$error.required}"><label class="col-sm-2 control-label">Пользователь</label><div class="col-sm-10"><ui-select ng-model="userProduct.user" theme="bootstrap" name="user" required=""><ui-select-match placeholder="Пользователь" allow-clear="true">{{$select.selected.username}}</ui-select-match><ui-select-choices repeat="item in allUserList | filter: $select.search"><div ng-bind-html="item.username | highlight: $select.search"></div></ui-select-choices></ui-select></div></div><div class="form-group" ng-if="!isCreate"><label class="col-sm-2 control-label">Цены</label><div class="col-sm-10"><div class="row"><div class="col-sm-12"><table class="table table-bordered"><thead><tr><th>Дата</th><th>Цена</th></tr></thead><tbody><tr ng-repeat="userProductPrice in userProductPrices"><td><a data-ui-sref="edit-user-product-price({userProductPriceId: userProductPrice._id})">{{userProductPrice.priceDate | date:\'dd.MM.yyyy\'}}</a></td><td>{{userProductPrice.productPrice}}</td></tr></tbody></table></div></div><div class="row"><div class="col-sm-8"><z-pagination config="pageConfig" page="pageConfig.page"></z-pagination></div><div class="col-sm-4"><ul class="nav nav-pills pull-right" ng-if="!isCreate"><li><a data-ui-sref="add-user-product-price({userProductId: userProduct._id})">Добавить цену</a></li></ul></div></div></div></div><div class="form-group"><div class="col-sm-2"><button type="submit" class="btn btn-primary">Сохранить</button></div><div class="col-sm-10 text-right" ng-if="!isCreate"><button type="button" data-ng-click="delete()" class="btn btn-danger">Удалить</button></div></div></form>'),e.put("main-pages/user-products/edit-user-product-price/edit-user-product-price.tpl.html",'<h4 ng-if="isCreate">Создание цены на связь товар-пользователь</h4><h4 ng-if="!isCreate">Редактирование цены на связь товар-пользователь</h4><form class="form-horizontal" ng-submit="save(changeForm.$invalid)" name="changeForm" novalidate=""><div class="form-group"><label class="col-sm-2 control-label">Продукт</label><div class="col-sm-10"><p class="form-control-static">{{userProductPrice.userProduct.product.title}}</p></div></div><div class="form-group"><label class="col-sm-2 control-label">Цена товара</label><div class="col-sm-10"><input type="text" class="form-control" name="productPrice" placeholder="Цена товара" data-ng-model="userProductPrice.productPrice"></div></div><div class="form-group required" ng-class="{\'has-error\': changeForm.$submitted && changeForm.priceDate.$error.required}"><label class="col-sm-2 control-label">Дата действия</label><div class="col-sm-10"><z-datepicker ng-model="userProductPrice.priceDate" options="{}" name="priceDate" required="true"></z-datepicker></div></div><div class="form-group"><div class="col-sm-2"><button type="submit" class="btn btn-primary">Сохранить</button></div><div class="col-sm-10 text-right" ng-if="!isCreate"><button type="button" data-ng-click="delete()" class="btn btn-danger">Удалить</button></div></div></form>'),e.put("main-pages/user-products/product-users-list/product-users-list.tpl.html",'<div class="row"><div class="col-sm-6"><h4>Список пользователей товара <a ui-sref="edit-product({id: product._id})">{{product.title}}</a></h4></div><div class="col-sm-6 text-right"><a ui-sref="create-user-product({productId: product._id})" class="btn btn-success">Добавить пользователя к товару</a></div></div><div class="row"><div class="col-sm-12"><z-pagination config="pageConfig" page="pageConfig.page"></z-pagination></div></div><div class="row"><div class="col-sm-12"><table class="table"><thead><tr><th>Дата создания</th><th>Имя пользователя</th></tr></thead><tbody><tr data-ng-repeat="item in items"><td><a ui-sref="edit-user-product({userProductId: item._id})">{{item.createdDate | date:\'dd.MM.yyyy HH:mm:ss\'}}</a></td><td><a ui-sref="edit-user({id: item.user._id})">{{item.user.username}}</a></td></tr></tbody></table></div></div>'),e.put("main-pages/manage-users/edit-user/change-password/edit-user-change-password.tpl.html",'<h4>Изменение пароля пользователя</h4><form class="form-horizontal" ng-submit="changePassword(changePasswordForm.$invalid)" name="changePasswordForm" novalidate=""><div class="form-group"><label class="col-sm-2 control-label">Имя</label><div class="col-sm-10"><p class="form-control-static">{{user.username}}</p></div></div><div class="form-group required" ng-class="{\'has-error\': changePasswordForm.$submitted && changePasswordForm.newPassword.$error.required}"><label for="inputPassword" class="col-sm-2 control-label">Новый пароль</label><div class="col-sm-10"><input type="password" name="newPassword" class="form-control" id="inputPassword" placeholder="Новый пароль" data-ng-model="data.newPassword" required=""></div></div><div class="form-group required" ng-class="{\'has-error\': changePasswordForm.$submitted && changePasswordForm.repeatNewPassword.$error.required}"><label for="inputPassword2" class="col-sm-2 control-label">Повторить новый пароль</label><div class="col-sm-10"><input type="password" name="repeatNewPassword" class="form-control" id="inputPassword2" placeholder="Повторить новый пароль" data-ng-model="data.repeatNewPassword" required=""></div></div><div class="form-group"><div class="col-sm-offset-2 col-sm-10"><button type="submit" class="btn btn-primary">Изменить пароль</button></div></div></form>'),e.put("main-pages/manage-users/edit-user/delivery-point/edit-user-delivery-point.tpl.html",'<h4 ng-if="isCreate">Добавление точки доставки</h4><h4 ng-if="!isCreate">Редактирование точки доставки</h4><form class="form-horizontal" ng-submit="save(changeForm.$invalid)" name="changeForm" novalidate=""><div class="form-group required" ng-class="{\'has-error\': changeForm.$submitted && changeForm.title.$error.required}"><label class="col-sm-2 control-label">Наименование точки</label><div class="col-sm-10"><input type="text" class="form-control" name="title" placeholder="Наименование точки доставки" data-ng-model="deliveryPoint.title" required=""></div></div><div class="form-group required" ng-class="{\'has-error\': changeForm.$submitted && changeForm.address.$error.required}"><label class="col-sm-2 control-label">Адресс</label><div class="col-sm-10"><input type="text" class="form-control" name="address" placeholder="Адресс" data-ng-model="deliveryPoint.address" required=""></div></div><div class="form-group" ng-class="{\'has-error\': changeForm.$submitted && changeForm.email.$error.pattern}"><label for="email" class="col-sm-2 control-label">E-mail</label><div class="col-sm-10"><input type="email" class="form-control" id="email" name="email" placeholder="E-mail" data-ng-model="deliveryPoint.email" data-ng-pattern="/^[a-z0-9!#$%&\'*+/=?^_`{|}~.-]+@[a-z0-9-]+(\\.[a-z0-9-]+)*$/i"></div></div><div class="form-group"><div class="col-sm-2"><button type="submit" class="btn btn-primary">Сохранить</button></div><div class="col-sm-10 text-right" ng-if="!isCreate"><button type="button" data-ng-click="delete()" class="btn btn-danger">Удалить</button></div></div></form>')}]);